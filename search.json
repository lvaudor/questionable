[{"path":[]},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"detect-free-text-columns","dir":"Articles","previous_headings":"Cleaning the data","what":"Detect free text columns","title":"Cleaning and formatting","text":"can try clean data prior use. instance, can detect columns likely correspond free text, set aside running random forest. done using is_free_text() function. function returns logical vector indicating whether column likely free text according number distinct values encountered. can apply check columns dataset:","code":"is_free_text(icecream$comment,max_distinct=10) #> [1] TRUE icecream %>%    summarise_all(is_free_text, max_distinct=10) %>%   t() #>                           [,1] #> id                       FALSE #> age                      FALSE #> genre                    FALSE #> taille                   FALSE #> regular_eating           FALSE #> sorbet_fraise            FALSE #> sorbet_framboise         FALSE #> sorbet_passion           FALSE #> sorbet_citron            FALSE #> creme_glacee_vanille     FALSE #> creme_glacee_chocolat    FALSE #> creme_glacee_rhumraisins FALSE #> creme_glacee_caramel     FALSE #> comment                   TRUE"},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"deal-with-improper-nas","dir":"Articles","previous_headings":"Cleaning the data","what":"Deal with improper NAs","title":"Cleaning and formatting","text":"raw dataset contains missing values incorrectly incoded character strings (, “Non renseigné”). apply function clean_improper_NAs() replace strings proper NA value. See example column creme_glacee_caramel Now, apply function columns :","code":"# Before correction icecream %>%   group_by(creme_glacee_caramel) %>%   tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           11 #> 2 1_un peu                15 #> 3 2_moyennement           10 #> 4 3_beaucoup               7 #> 5 4_énormément            14 #> 6 Non renseigné           93 # After correction icecream %>%   mutate(creme_glacee_caramel=clean_improper_NAs(creme_glacee_caramel,                                                  possible_strings=\"Non renseigné\")) %>%   group_by(creme_glacee_caramel) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           11 #> 2 1_un peu                15 #> 3 2_moyennement           10 #> 4 3_beaucoup               7 #> 5 4_énormément            14 #> 6 NA                      93 icecream_cleaned <- icecream %>%   mutate(across(everything(),                 ~clean_improper_NAs(.x,                                     possible_strings=\"Non renseigné\")))"},{"path":[]},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"deal-with-missing-values","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Deal with missing values","title":"Cleaning and formatting","text":"Now, missing information? Running random forests require fully populated datasets. can either remove rows missing values (hence losing individuals) remove columns many missing values (hence losing variables) optimize dataset use random forest model populating missing values. function optimize_for_rf() allows impute missing values variable x using observed distribution x (.e. distribution non-missing values x). instance:","code":"# Unoptimized: level frequencies icecream_cleaned %>%    group_by(genre) %>%    tally() #> # A tibble: 4 × 2 #>   genre           n #>   <chr>       <int> #> 1 femme          65 #> 2 homme          60 #> 3 non binaire    10 #> 4 NA             15  # Optimized for rf: level frequencies icecream_cleaned %>%    mutate(genre=optimize_for_rf(genre)) %>%    group_by(genre) %>%    tally() #> # A tibble: 3 × 2 #>   genre           n #>   <chr>       <int> #> 1 femme          75 #> 2 homme          64 #> 3 non binaire    11"},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"ordinal-variables-as-numeric-variables","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Ordinal variables as numeric variables","title":"Cleaning and formatting","text":"function also allows optimization variables random forest detecting ordinal categorical variables (provided formatted way informs order categories, e.g. “0 : ”, “1: bit”,… “5: completely”) transforming numeric variables.","code":"# Unoptimized for rf: level frequencies icecream_cleaned %>%    group_by(creme_glacee_vanille) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_vanille     n #>   <chr>                <int> #> 1 0_pas_du_tout           17 #> 2 1_un peu                22 #> 3 2_moyennement           36 #> 4 3_beaucoup              20 #> 5 4_énormément            25 #> 6 NA                      30 # Optimized for rf: level frequencies icecream_cleaned %>%    mutate(creme_glacee_vanille=optimize_for_rf(creme_glacee_vanille)) %>%    group_by(creme_glacee_vanille) %>%   tally() #> # A tibble: 5 × 2 #>   creme_glacee_vanille     n #>                  <dbl> <int> #> 1                    0    18 #> 2                    1    30 #> 3                    2    48 #> 4                    3    25 #> 5                    4    29"},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"variables-with-many-missing-values","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Variables with many missing values","title":"Cleaning and formatting","text":"cases, might seem bit questionable replace missing values based observed distribution. particularly proportion missing values variable particularly high (threshold “high” course quite subjective depends context analysis). function optimize_for_rf() allows set threshold proportion missing values variable missing values replaced random value rather character string making absence value category . threshold set 0.3333 default, can changed using max_missing argument. dataset, variables contain 33% missing values: many missing values (72%) variable regular_eating, many people answer question “eat ice cream regularly?”. Maybe term “regularly” defined, thus people answering sign unsure answer, possibly meaning actually eat ice cream frequency somewhat middle “regular” “regular”. regard, consider missing value fact answer, replace missing values character string “Unsure” (string choice). Another variable many missing answers: creme_glacee_caramel. variable bit different previous one, question corresponding categorical answer pseudo-numeric (ordinal) one. , actually 62% missing values variable. ? Maybe people never tasted caramel ice cream provide answer question whether liked . case, also argued missing answer fact informational answer… included random forest model creme_glacee_caramel treated numeric (ordinal) variable: technically replace missing answers given value valid answer. safest course action remove variable dataset running random forest model.","code":"icecream_cleaned %>%    summarise_all(is_mainly_missing) %>%    t() #>                           [,1] #> id                       FALSE #> age                      FALSE #> genre                    FALSE #> taille                   FALSE #> regular_eating            TRUE #> sorbet_fraise            FALSE #> sorbet_framboise         FALSE #> sorbet_passion           FALSE #> sorbet_citron            FALSE #> creme_glacee_vanille     FALSE #> creme_glacee_chocolat    FALSE #> creme_glacee_rhumraisins FALSE #> creme_glacee_caramel      TRUE #> comment                   TRUE icecream_cleaned %>%    group_by(regular_eating) %>%    tally() #> # A tibble: 3 × 2 #>   regular_eating     n #>   <chr>          <int> #> 1 Non               19 #> 2 Oui               23 #> 3 NA               108  icecream_cleaned %>%    mutate(regular_eating=optimize_for_rf(regular_eating,replace_NA_with=\"Pas sûr(e)\")) %>%    group_by(regular_eating) %>%    tally() #> # A tibble: 3 × 2 #>   regular_eating     n #>   <chr>          <int> #> 1 Non               19 #> 2 Oui               23 #> 3 Pas sûr(e)       108 icecream_cleaned %>%    group_by(creme_glacee_caramel) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           11 #> 2 1_un peu                15 #> 3 2_moyennement           10 #> 4 3_beaucoup               7 #> 5 4_énormément            14 #> 6 NA                      93"},{"path":"https://lvaudor.github.io/questionable/articles/Cleaning_and_formatting.html","id":"put-everything-together-prepare-data-for-running-a-random-forest-model","dir":"Articles","previous_headings":"","what":"Put everything together: prepare data for running a random forest model","title":"Cleaning and formatting","text":"summarise, workflow apply prepare dataset prior running random forest model :","code":"icecream_cleaned <- icecream %>%   #identifier is not relevant for the analysis and would be taken into account as numeric predictor   select(-id) %>%    # comment identified with is_free_text()   select(-comment) %>%   # replace \"Non renseigné\" values with proper NAs   mutate_all(~clean_improper_NAs(.x, possible_strings=\"Non renseigné\")) %>%    #creme_glacee_caramel as containing too many not fillable NAs  %>%    select(-creme_glacee_caramel) %>%   #optimize all remaining variables for random forest   mutate_all(~optimize_for_rf(.x, threshold_missing_proportion=0.3333))"},{"path":"https://lvaudor.github.io/questionable/articles/Introduction.html","id":"objectives-of-the-package","dir":"Articles","previous_headings":"","what":"Objectives of the package","title":"Introduction","text":"package aims making analysis questionnaires easier. provides functions clean transform data order make useable analysis (particular, running random forests) run random forests order identify variables important predicting given outcome test visualize link two variables three aspects dealt three different vignettes. package comes built-dataset (purely fantasy origin) called icecream helps examplify functions general purpose package. hence questionable data contains results questionnaire ice cream consumption. dataset used examples . dataset contains nrow(icecream) rows corresponding number respondants ncol(icecream) columns. columns (variables) varying types described : (imaginary) questions asked (imaginary) French respondants: age: old ? (years) genre: gender? (masculine/feminine/non binary) taille: size? (centimeters) regular eating: regularly eat icecreams? (yes/) sorbet_X: like X-flavoured sorbet? (1_not , 2_a little, 3_quite lot, 4_a lot, 5_very much). icecream_X: like X-flavoured ice-cream? (1_not , 2_a little, 3_quite lot, 4_a lot, 5_very much).","code":"data(icecream) icecream %>%    dplyr::glimpse() #> Rows: 150 #> Columns: 14 #> $ id                       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14… #> $ age                      <dbl> 56, 77, 53, 70, 58, 15, 16, 54, 6, 70, 23, 18… #> $ genre                    <chr> \"femme\", \"femme\", \"homme\", \"homme\", \"femme\", … #> $ taille                   <dbl> 157.92612, 164.78115, 165.37722, 167.21987, 1… #> $ regular_eating           <chr> \"Non renseigné\", NA, \"Oui\", \"Non\", NA, \"Oui\",… #> $ sorbet_fraise            <chr> \"4_énormément\", \"3_beaucoup\", \"0_pas_du_tout\"… #> $ sorbet_framboise         <chr> \"4_énormément\", \"Non renseigné\", \"1_un peu\", … #> $ sorbet_passion           <chr> \"0_pas_du_tout\", \"0_pas_du_tout\", \"1_un peu\",… #> $ sorbet_citron            <chr> \"3_beaucoup\", \"2_moyennement\", \"Non renseigné… #> $ creme_glacee_vanille     <chr> \"2_moyennement\", \"4_énormément\", \"3_beaucoup\"… #> $ creme_glacee_chocolat    <chr> \"3_beaucoup\", \"Non renseigné\", \"1_un peu\", \"4… #> $ creme_glacee_rhumraisins <chr> \"4_énormément\", \"4_énormément\", \"4_énormément… #> $ creme_glacee_caramel     <chr> \"Non renseigné\", \"Non renseigné\", \"Non rensei… #> $ comment                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Pouet po…"},{"path":"https://lvaudor.github.io/questionable/articles/Running_random_forests.html","id":"first-exploration","dir":"Articles","previous_headings":"","what":"First exploration","title":"Running random forests","text":"Now, let’s explore ice-cream consumption characteristics relate characteristics. prepare data running random forest: Let’s start exploring explain regularity eating ice-cream. distribution variable:","code":"icecream_for_rf=icecream %>%           select(-id,-comment,-creme_glacee_caramel) %>%           mutate_all(optimize_for_rf) icecream_for_rf %>%    group_by(regular_eating) %>%    tally() #> # A tibble: 3 × 2 #>   regular_eating     n #>   <chr>          <int> #> 1 Non               32 #> 2 Non renseigné     81 #> 3 Oui               37"},{"path":"https://lvaudor.github.io/questionable/articles/Running_random_forests.html","id":"running-a-wild-guess-random-forest","dir":"Articles","previous_headings":"","what":"Running a “wild guess” random forest","title":"Running random forests","text":"Imagine idea whatsoever possible explaining factors. Let’s just run random forest possible predictors.  displays relative importance predictors predicting response variable.","code":"rf=run_rf(icecream_for_rf,           response=\"regular_eating\",           plot=TRUE)"},{"path":"https://lvaudor.github.io/questionable/articles/Running_random_forests.html","id":"understanding-the-predictors-effect","dir":"Articles","previous_headings":"","what":"Understanding the predictor’s effect","title":"Running random forests","text":"Now, let’s instance consider effect age whether people regularly eat ice cream.  plot shows normalized logit scores probability regular eater ice cream. higher score, likely person regular eater ice cream. particular, can see younger people likely assert regular eaters ice cream.","code":"partial_dependence_plot(rf=rf,                         predictor=\"age\",                         probabilities=TRUE)"},{"path":"https://lvaudor.github.io/questionable/articles/Running_random_forests.html","id":"on-collinearity","dir":"Articles","previous_headings":"","what":"On collinearity","title":"Running random forests","text":"According random forest importance assessment predictors’ importance, age size respondant important predictors. Well. omniscient creator data, can tell , yes, indeed answers regarding regular eating icecream made dependent age. hand, make dependent size respondant, (non-expert point view ice-cream consumption anyway) odd choice. hand, make answer dependent gender, make size dependent age gender. --wild guess size somehow integrates effect relevant predictors, making appear relatively important actually , making , meaningful predictors appear less important actually . hence illustrate although random forests great tool exploratory data analysis, substitute good understanding data domain (certainly free card include probably irrelevant descriptors data). , let’s run random forest excluding variable taille first, probably safer basis later interpretations.  can see relative importance gender appears higher now removed size mix.","code":"rf=run_rf(icecream_for_rf %>%              dplyr::select(-taille),           response=\"regular_eating\",           plot=TRUE)"},{"path":"https://lvaudor.github.io/questionable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lise Vaudor. Maintainer.","code":""},{"path":"https://lvaudor.github.io/questionable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vaudor L (2025). questionable: package question questionaire data.. R package version 0.1.0, https://lvaudor.github.io/questionable/.","code":"@Manual{,   title = {questionable: A package to question questionaire data.},   author = {Lise Vaudor},   year = {2025},   note = {R package version 0.1.0},   url = {https://lvaudor.github.io/questionable/}, }"},{"path":"https://lvaudor.github.io/questionable/index.html","id":"questionable","dir":"","previous_headings":"","what":"A package to question questionaire data.","title":"A package to question questionaire data.","text":"install package, run following commands. remotes installed yet {r} install.packages(\"remotes\") remotes installed: {r} remotes::install_github(\"lvaudor/questionable\")","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"Performs plot crossing two variables, adapting kind variable (qualitative quantitative)","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"","code":"biplot(dataset, x, y)"},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"dataset dataset containing variables x name first variable y name second variable","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"","code":"# example code data(icecream) biplot(icecream,\"creme_glacee_vanille\",\"creme_glacee_chocolat\") #> Error in aes(x = x, fill = y): could not find function \"aes\" biplot(icecream,\"age\",\"creme_glacee_chocolat\") #> Warning: There were 65 warnings in `dplyr::summarise()`. #> The first warning was: #> ℹ In argument: `y = mean(y, na.rm = T)`. #> ℹ In group 1: `x = 3`. #> Caused by warning in `mean.default()`: #> ! argument is not numeric or logical: returning NA #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 64 remaining warnings. #> Warning: Removed 15 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 65 rows containing missing values or values outside the scale range #> (`geom_point()`).  biplot(icecream,\"age\",\"taille\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 36 rows containing non-finite outside the scale range #> (`stat_smooth()`). #> Warning: Removed 36 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://lvaudor.github.io/questionable/reference/bivar_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","title":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","text":"Assesses types variables (quantitative qualitative) bivariate analysis","code":""},{"path":"https://lvaudor.github.io/questionable/reference/bivar_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","text":"","code":"bivar_type(dataset, x, y)"},{"path":"https://lvaudor.github.io/questionable/reference/bivar_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","text":"dataset dataset containing variables x name first variable y name second variable","code":""},{"path":"https://lvaudor.github.io/questionable/reference/bivar_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","text":"type bivariate analysis (either quanti-quanti, quali-quanti quali-quali)","code":""},{"path":"https://lvaudor.github.io/questionable/reference/bivar_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assesses the types of variables (quantitative or qualitative) for a bivariate analysis — bivar_type","text":"","code":"# example code data(icecream) biplot(icecream,\"creme_glacee_vanille\",\"creme_glacee_chocolat\") #> Error in aes(x = x, fill = y): could not find function \"aes\" biplot(icecream,\"age\",\"creme_glacee_chocolat\") #> Warning: There were 65 warnings in `dplyr::summarise()`. #> The first warning was: #> ℹ In argument: `y = mean(y, na.rm = T)`. #> ℹ In group 1: `x = 3`. #> Caused by warning in `mean.default()`: #> ! argument is not numeric or logical: returning NA #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 64 remaining warnings. #> Warning: Removed 15 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 65 rows containing missing values or values outside the scale range #> (`geom_point()`).  biplot(icecream,\"age\",\"taille\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 36 rows containing non-finite outside the scale range #> (`stat_smooth()`). #> Warning: Removed 36 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"Replace values improperly provided given string indicating missing value NA","code":""},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"","code":"clean_improper_NAs(   x,   possible_strings = c(\"N/A\", \"[Nn]on [Rr]enseigné\", \"[Mm]anquant\", \"[Uu]nknown\",     \"[Nn]ot provided\", \"[Mm]issing\") )"},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"x vector possible_strings strings provided raw table possibly indicate NA value","code":""},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether vector is free text or not — is_free_text","title":"Tests whether vector is free text or not — is_free_text","text":"Tests whether vector free text ","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether vector is free text or not — is_free_text","text":"","code":"is_free_text(x, max_distinct = 10)"},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether vector is free text or not — is_free_text","text":"x vector max_distinct maximum number distinct values consider column free text. Defaults 20.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"Replace values improperly provided given string indicating missing value NA","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"","code":"is_mainly_missing(x, threshold_proportion = 0.3333)"},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"x vector threshold_proportion proportion missing values vector considered mainly missing. Defaults 0.33.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms a vector for ease of use in a random forest — optimize_for_rf","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"Transforms vector ease use random forest","code":""},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"","code":"optimize_for_rf(   x,   replace_NA_with = \"Not provided\",   threshold_missing_proportion = 0.3333 )"},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"x vector optimize running random forest replace_NA_with character string used replace NA category categorical responses replaced random values drawn observed distribution. Defaults \"provided\" threshold_missing_proportion proportion NAs can replaced random values drawn observed distribution. Defaults 0.3333.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/partial_dependence_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","title":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","text":"Plots partial dependence random forest model response predictor (based training dataset)","code":""},{"path":"https://lvaudor.github.io/questionable/reference/partial_dependence_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","text":"","code":"partial_dependence_plot(rf, predictor, probabilities = FALSE)"},{"path":"https://lvaudor.github.io/questionable/reference/partial_dependence_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","text":"rf result run_rf() function predictor name (passed string) predictor considered probabilities TRUE, probabilities (categorical) response variable plotted instead predicted values. Defaults FALSE.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/partial_dependence_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","text":"partial dependence plot","code":""},{"path":"https://lvaudor.github.io/questionable/reference/partial_dependence_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the partial dependence of a random forest model response to a predictor (based on the training dataset) — partial_dependence_plot","text":"","code":"# example code data(icecream) lemon_rf=run_rf(icecream %>%           dplyr::select(-id) %>%           dplyr::mutate_all(optimize_for_rf),           response=\"sorbet_citron\") #> Warning: The response has five or fewer unique values.  Are you sure you want to do regression? partial_dependence_plot(lemon_rf,predictor=\"age\")  #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'  partial_dependence_plot(lemon_rf,predictor=\"creme_glacee_vanille\")  #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: span too small.   fewer data values than degrees of freedom. #> Warning: pseudoinverse used at -0.02 #> Warning: neighborhood radius 2.02 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0804 #> Warning: span too small.   fewer data values than degrees of freedom. #> Warning: pseudoinverse used at -0.02 #> Warning: neighborhood radius 2.02 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0804 #> Warning: no non-missing arguments to max; returning -Inf"},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a random forest model — run_rf","title":"Runs a random forest model — run_rf","text":"Runs random forest model","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a random forest model — run_rf","text":"","code":"run_rf(data, response = colnames(data)[1], plot = FALSE, clean_name = FALSE)"},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a random forest model — run_rf","text":"data data (optimized running rf) response name response variable","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs a random forest model — run_rf","text":"","code":"# example code data(icecream) run_rf(icecream %>%           select(-id) %>%           mutate_all(optimize_for_rf),           response=\"sorbet_citron\") #> Error in mutate_all(., optimize_for_rf): could not find function \"mutate_all\""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether vector is free text or not — test_pval","title":"Tests whether vector is free text or not — test_pval","text":"Tests whether vector free text ","code":""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether vector is free text or not — test_pval","text":"","code":"test_pval(dataset, x, y)"},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether vector is free text or not — test_pval","text":"x vector optimize running random forest replace_NA_with character string used replace NA category categorical responses. Defaults \"provided\"","code":""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests whether vector is free text or not — test_pval","text":"","code":"# example code data(icecream) test_pval(icecream,\"age\",\"creme_glacee_rhumraisins\") #> [1] 9.866794e-44"}]
