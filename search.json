[{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Intro","text":"package aims making analysis questionnaires easier. provides functions clean transform data order make useable analysis (particular, running random forests) run random forests order identify variables important predicting given outcome test visualize link two variables package comes built-dataset (purely fantasy origin) called icecream helps examplify functions general purpose package. hence questionable data contains results questionnaire ice cream consumption. dataset used examples . dataset contains nrow(icecream) rows corresponding number respondants ncol(icecream) columns. columns (variables) varying types described :","code":"data(icecream) icecream %>%    dplyr::glimpse() #> Rows: 150 #> Columns: 14 #> $ id                       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14… #> $ age                      <dbl> 59, 49, 40, 31, 42, 40, 71, 14, NA, 39, 64, 2… #> $ regular_eating           <chr> \"Oui\", \"Non\", \"Non renseigné\", \"Non\", \"Non\", … #> $ genre                    <chr> NA, \"homme\", NA, \"femme\", \"femme\", \"non binai… #> $ taille                   <dbl> 171.5451, 172.1080, 161.4229, 162.6284, 159.3… #> $ sorbet_fraise            <chr> \"2_moyennement\", \"Non renseigné\", \"4_énorméme… #> $ sorbet_framboise         <chr> \"1_un peu\", \"2_moyennement\", \"2_moyennement\",… #> $ sorbet_passion           <chr> \"4_énormément\", \"4_énormément\", \"3_beaucoup\",… #> $ sorbet_citron            <chr> \"2_moyennement\", \"4_énormément\", \"1_un peu\", … #> $ creme_glacee_vanille     <chr> \"2_moyennement\", \"2_moyennement\", \"Non rensei… #> $ creme_glacee_chocolat    <chr> \"Non renseigné\", \"2_moyennement\", \"3_beaucoup… #> $ creme_glacee_rhumraisins <chr> \"4_énormément\", \"0_pas_du_tout\", \"0_pas_du_to… #> $ creme_glacee_caramel     <chr> \"Non renseigné\", \"Non renseigné\", \"4_énorméme… #> $ comment                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Pouet po…"},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"detect-free-text-columns","dir":"Articles","previous_headings":"Introduction","what":"Detect free text columns","title":"Intro","text":"can try clean data prior use. instance, can detect columns likely correspond free text, set aside running random forest. done using is_free_text() function. function returns logical vector indicating whether column likely free text according number distinct values encountered. can apply check columns dataset:","code":"is_free_text(icecream$comment,max_distinct=10) #> [1] TRUE icecream %>%    summarise_all(is_free_text, max_distinct=10) %>%   t() #>                           [,1] #> id                       FALSE #> age                      FALSE #> regular_eating           FALSE #> genre                    FALSE #> taille                   FALSE #> sorbet_fraise            FALSE #> sorbet_framboise         FALSE #> sorbet_passion           FALSE #> sorbet_citron            FALSE #> creme_glacee_vanille     FALSE #> creme_glacee_chocolat    FALSE #> creme_glacee_rhumraisins FALSE #> creme_glacee_caramel     FALSE #> comment                   TRUE"},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"deal-with-improper-nas","dir":"Articles","previous_headings":"Introduction","what":"Deal with improper NAs","title":"Intro","text":"raw dataset contains missing values incorrectly incoded character strings (, “Non renseigné”). apply function clean_improper_NAs() replace strings proper NA value. See example column creme_glacee_caramel Now, apply function columns :","code":"# Before correction icecream %>%   group_by(creme_glacee_caramel) %>%   tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           12 #> 2 1_un peu                11 #> 3 2_moyennement            9 #> 4 3_beaucoup               6 #> 5 4_énormément            21 #> 6 Non renseigné           91 # After correction icecream %>%   mutate(creme_glacee_caramel=clean_improper_NAs(creme_glacee_caramel,possible_strings=\"Non renseigné\")) %>%   group_by(creme_glacee_caramel) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           12 #> 2 1_un peu                11 #> 3 2_moyennement            9 #> 4 3_beaucoup               6 #> 5 4_énormément            21 #> 6 NA                      91 icecream_cleaned <- icecream %>%   mutate(across(everything(), ~clean_improper_NAs(.x, possible_strings=\"Non renseigné\")))"},{"path":[]},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"deal-with-missing-values","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Deal with missing values","title":"Intro","text":"Now, missing information? Running random forests require fully populated datasets. can either remove rows missing values (hence losing individuals) remove columns many missing values (hence losing variables) optimize dataset use random forest model populating missing values. function optimize_for_rf() allows impute missing values variable x using observed distribution x (.e. distribution non-missing values x). instance:","code":"# Unoptimized: level frequencies icecream_cleaned %>%    group_by(genre) %>%    tally() #> # A tibble: 4 × 2 #>   genre           n #>   <chr>       <int> #> 1 femme          71 #> 2 homme          54 #> 3 non binaire    10 #> 4 NA             15  # Optimized for rf: level frequencies icecream_cleaned %>%    mutate(genre=optimize_for_rf(genre)) %>%    group_by(genre) %>%    tally() #> # A tibble: 3 × 2 #>   genre           n #>   <chr>       <int> #> 1 femme          78 #> 2 homme          60 #> 3 non binaire    12"},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"ordinal-variables-as-numeric-variables","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Ordinal variables as numeric variables","title":"Intro","text":"function also allows optimization variables random forest detecting ordinal categorical variables (provided formatted way informs order categories, e.g. “0 : ”, “1: bit”,… “5: completely”) transforming numeric variables.","code":"# Unoptimized for rf: level frequencies icecream_cleaned %>%    group_by(creme_glacee_vanille) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_vanille     n #>   <chr>                <int> #> 1 0_pas_du_tout           27 #> 2 1_un peu                19 #> 3 2_moyennement           27 #> 4 3_beaucoup              19 #> 5 4_énormément            28 #> 6 NA                      30 # Optimized for rf: level frequencies icecream_cleaned %>%    mutate(creme_glacee_vanille=optimize_for_rf(creme_glacee_vanille)) %>%    group_by(creme_glacee_vanille) %>%   tally() #> # A tibble: 5 × 2 #>   creme_glacee_vanille     n #>                  <dbl> <int> #> 1                    0    31 #> 2                    1    24 #> 3                    2    39 #> 4                    3    24 #> 5                    4    32"},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"variables-with-many-missing-values","dir":"Articles","previous_headings":"Optimize variables for random forests","what":"Variables with many missing values","title":"Intro","text":"cases, might seem bit questionable replace missing values based observed distribution. particularly proportion missing values variable particularly high (threshold “high” course quite subjective depends context analysis). function optimize_for_rf() allows set threshold proportion missing values variable missing values replaced random value rather character string making absence value category . threshold set 0.3333 default, can changed using max_missing argument. dataset, variables contain 33% missing values: many missing values (40%) variable regular_eating, many people answer question “eat ice cream regularly?”. Maybe term “regularly” defined, thus people answering sign unsure answer, possibly meaning actually eat ice cream frequency somewhat middle “regular” “regular”. regard, consider missing value fact answer, replace missing values character string “Unsure” (string choice). Another variable many missing answers: creme_glacee_caramel. variable bit different previous one, question corresponding categorical answer pseudo-numeric (ordinal) one. , actually 61% missing values variable. ? Maybe people never tasted caramel ice cream provide answer question whether liked . case, also argued missing answer fact informational answer… included random forest model creme_glacee_caramel treated numeric (ordinal) variable: technically replace missing answers given value valid answer. safest course action remove variable dataset running random forest model.","code":"icecream_cleaned %>%    summarise_all(is_mainly_missing) %>%    t() #>                           [,1] #> id                       FALSE #> age                      FALSE #> regular_eating            TRUE #> genre                    FALSE #> taille                   FALSE #> sorbet_fraise            FALSE #> sorbet_framboise         FALSE #> sorbet_passion           FALSE #> sorbet_citron            FALSE #> creme_glacee_vanille     FALSE #> creme_glacee_chocolat    FALSE #> creme_glacee_rhumraisins FALSE #> creme_glacee_caramel      TRUE #> comment                   TRUE icecream_cleaned %>%    group_by(regular_eating) %>%    tally() #> # A tibble: 3 × 2 #>   regular_eating     n #>   <chr>          <int> #> 1 Non               45 #> 2 Oui               45 #> 3 NA                60  icecream_cleaned %>%    mutate(regular_eating=optimize_for_rf(regular_eating,replace_NA_with=\"Pas sûr(e)\")) %>%    group_by(regular_eating) %>%    tally() #> # A tibble: 3 × 2 #>   regular_eating     n #>   <chr>          <int> #> 1 Non               45 #> 2 Oui               45 #> 3 Pas sûr(e)        60 icecream_cleaned %>%    group_by(creme_glacee_caramel) %>%    tally() #> # A tibble: 6 × 2 #>   creme_glacee_caramel     n #>   <chr>                <int> #> 1 0_pas_du_tout           12 #> 2 1_un peu                11 #> 3 2_moyennement            9 #> 4 3_beaucoup               6 #> 5 4_énormément            21 #> 6 NA                      91"},{"path":"https://lvaudor.github.io/questionable/articles/Intro.html","id":"put-everything-together-prepare-data-for-running-a-random-forest-model","dir":"Articles","previous_headings":"","what":"Put everything together: prepare data for running a random forest model","title":"Intro","text":"summarise, workflow apply prepare dataset prior running random forest model :","code":"icecream_cleaned <- icecream %>%   #identifier is not relevant for the analysis and would be taken into account as numeric predictor   select(-id) %>%    # comment identified with is_free_text()   select(-comment) %>%   # replace \"Non renseigné\" values with proper NAs   mutate_all(~clean_improper_NAs(.x, possible_strings=\"Non renseigné\")) %>%    #creme_glacee_caramel as containing too many not fillable NAs  %>%    select(-creme_glacee_caramel) %>%   #optimize all remaining variables for random forest   mutate_all(~optimize_for_rf(.x, threshold_missing_proportion=0.3333))"},{"path":"https://lvaudor.github.io/questionable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://lvaudor.github.io/questionable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2025). questionable: Package (Title Case). R package version 0.1.0, https://lvaudor.github.io/questionable/.","code":"@Manual{,   title = {questionable: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2025},   note = {R package version 0.1.0},   url = {https://lvaudor.github.io/questionable/}, }"},{"path":"https://lvaudor.github.io/questionable/index.html","id":"questionable","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"install package, run following commands: {r} # remotes installed yet install.packages(\"remotes\") # : remotes::install_github(\"lvaudor/questionable\")","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"Performs plot crossing two variables, adapting kind variable (qualitative quantitative)","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"","code":"biplot(dataset, x, y)"},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"x name first variable y name second variable","code":""},{"path":"https://lvaudor.github.io/questionable/reference/biplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a plot crossing two variables, adapting to the kind of variable (qualitative or quantitative) — biplot","text":"","code":"# example code data(icecream) biplot(icecream,\"creme_glacee_vanille\",\"creme_glacee_chocolat\") #> Error in select(dataset, all_of(c(x, y))): could not find function \"select\" biplot(icecream,\"age\",\"creme_glacee_chocolat\") #> Error in select(dataset, all_of(c(x, y))): could not find function \"select\" biplot(icecream,\"age\",\"taille\") #> Error in select(dataset, all_of(c(x, y))): could not find function \"select\""},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"Replace values improperly provided given string indicating missing value NA","code":""},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"","code":"clean_improper_NAs(   x,   possible_strings = c(\"N/A\", \"[Nn]on [Rr]enseigné\", \"[Mm]anquant\", \"[Uu]nknown\",     \"[Nn]ot provided\", \"[Mm]issing\") )"},{"path":"https://lvaudor.github.io/questionable/reference/clean_improper_NAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values improperly provided as a given string indicating missing value with NA — clean_improper_NAs","text":"x vector possible_strings strings provided raw table possibly indicate NA value","code":""},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://lvaudor.github.io/questionable/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether vector is free text or not — is_free_text","title":"Tests whether vector is free text or not — is_free_text","text":"Tests whether vector free text ","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether vector is free text or not — is_free_text","text":"","code":"is_free_text(x, max_distinct = 10)"},{"path":"https://lvaudor.github.io/questionable/reference/is_free_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether vector is free text or not — is_free_text","text":"x vector max_distinct maximum number distinct values consider column free text. Defaults 20.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"Replace values improperly provided given string indicating missing value NA","code":""},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"","code":"is_mainly_missing(x, threshold_proportion = 0.3333)"},{"path":"https://lvaudor.github.io/questionable/reference/is_mainly_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values improperly provided as a given string indicating missing value with NA — is_mainly_missing","text":"x vector threshold_proportion proportion missing values vector considered mainly missing. Defaults 0.33.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms a vector for ease of use in a random forest — optimize_for_rf","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"Transforms vector ease use random forest","code":""},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"","code":"optimize_for_rf(   x,   replace_NA_with = \"Not provided\",   threshold_missing_proportion = 0.3333 )"},{"path":"https://lvaudor.github.io/questionable/reference/optimize_for_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms a vector for ease of use in a random forest — optimize_for_rf","text":"x vector optimize running random forest replace_NA_with character string used replace NA category categorical responses replaced random values drawn observed distribution. Defaults \"provided\" threshold_missing_proportion proportion NAs can replaced random values drawn observed distribution. Defaults 0.3333.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether vector is free text or not — run_rf","title":"Tests whether vector is free text or not — run_rf","text":"Tests whether vector free text ","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether vector is free text or not — run_rf","text":"","code":"run_rf(data, reponse = colnames(data)[1], plot = FALSE, clean_name = FALSE)"},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether vector is free text or not — run_rf","text":"x vector optimize running random forest replace_NA_with character string used replace NA category categorical responses. Defaults \"provided\"","code":""},{"path":"https://lvaudor.github.io/questionable/reference/run_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests whether vector is free text or not — run_rf","text":"","code":"# example code data(icecream) run_rf(icecream %>%           select(-id) %>%           mutate_all(optimize_for_rf),           reponse=\"sorbet_citron\") #> Error in mutate_all(., optimize_for_rf): could not find function \"mutate_all\""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether vector is free text or not — test_pval","title":"Tests whether vector is free text or not — test_pval","text":"Tests whether vector free text ","code":""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether vector is free text or not — test_pval","text":"","code":"test_pval(dataset, x, y)"},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether vector is free text or not — test_pval","text":"x vector optimize running random forest replace_NA_with character string used replace NA category categorical responses. Defaults \"provided\"","code":""},{"path":"https://lvaudor.github.io/questionable/reference/test_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests whether vector is free text or not — test_pval","text":"","code":"# example code data(icecream) test_pval(icecream,\"age\",\"creme_glacee_rhumraisins\") #> [1] 2.787642e-43"}]
